{"version":3,"sources":["assets\\Script\\Api\\UserApi.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Config from '../Config';\r\nimport { BBUser } from '../Models/Models';\r\n\r\ninterface UserCallBack {\r\n    success(user: BBUser): void;\r\n    fail(err: string): void;\r\n}\r\n\r\nexport default class UserApi {\r\n    private static baseUrl: string = Config.BaseURL + \"/api/user/\";\r\n\r\n    public static Add(nickname: string, cb: UserCallBack) {\r\n        let url = this.baseUrl;\r\n        wx.request({\r\n            url: url,\r\n            method: \"POST\",\r\n            data: {\r\n                \"Name\": nickname\r\n            },\r\n            success: (res: Object) => {\r\n                res = res[\"data\"];\r\n                console.log(res);\r\n                if (res[\"IsSuccess\"]) {\r\n                    let data = res[\"Data\"];\r\n                    let user = new BBUser(data[\"ID\"], data[\"Name\"]);\r\n                    cb.success(user);\r\n                } else {\r\n                    cb.fail(res[\"Info\"][\"Message\"]);\r\n                }\r\n            },\r\n            fail: (err) => {\r\n                console.log(err);\r\n                cb.fail(err.errMsg);\r\n            }\r\n        });\r\n    }\r\n\r\n    public static Update(uid: number, nickname: string, cb: UserCallBack) {\r\n        let url = this.baseUrl;\r\n        wx.request({\r\n            url: url,\r\n            method: \"POST\",\r\n            data: {\r\n                \"ID\": uid,\r\n                \"Name\": nickname\r\n            },\r\n            success: (res: Object) => {\r\n                res = res[\"data\"];\r\n                if (res[\"IsSuccess\"]) {\r\n                    let data = res[\"Data\"];\r\n                    let user = new BBUser(data[\"ID\"], data[\"Name\"]);\r\n                    cb.success(user);\r\n                } else {\r\n                    cb.fail(res[\"Info\"][\"Message\"]);\r\n                }\r\n            },\r\n            fail: (err) => {\r\n                cb.fail(err.errMsg);\r\n            }\r\n        });\r\n    }\r\n\r\n    public static Get(uid: number, cb: UserCallBack) {\r\n        let url = this.baseUrl + uid.toString();\r\n        wx.request({\r\n            url: url,\r\n            method: \"GET\",\r\n            success: (res: Object) => {\r\n                res = res[\"data\"];\r\n                if (res[\"IsSuccess\"]) {\r\n                    let data = res[\"Data\"];\r\n                    let user = new BBUser(data[\"ID\"], data[\"Name\"]);\r\n                    cb.success(user);\r\n                } else {\r\n                    cb.fail(res[\"Info\"][\"Message\"]);\r\n                }\r\n            },\r\n            fail: (err) => {\r\n                cb.fail(err.errMsg);\r\n            }\r\n        });\r\n    }\r\n\r\n    public static GetByName(name: string, cb: UserCallBack) {\r\n        let url = this.baseUrl + \"name/\" + name;\r\n        wx.request({\r\n            url: url,\r\n            method: \"GET\",\r\n            success: (res: Object) => {\r\n                res = res[\"data\"];\r\n                // let res: Object = resp.data.valueOf();\r\n                if (res[\"IsSuccess\"]) {\r\n                    let data = res[\"Data\"];\r\n                    let user = new BBUser(data[\"ID\"], data[\"Name\"]);\r\n                    cb.success(user);\r\n                } else {\r\n                    cb.fail(res[\"Info\"][\"Message\"]);\r\n                }\r\n            },\r\n            fail: (err) => {\r\n                cb.fail(err.errMsg);\r\n            }\r\n        });\r\n    }\r\n\r\n    public static Delete(uid: number, cb: UserCallBack) {\r\n        let url = this.baseUrl + uid.toString();\r\n        wx.request({\r\n            url: url,\r\n            method: \"DELETE\",\r\n            success: (res: Object) => {\r\n                res = res[\"data\"];\r\n                if (res[\"IsSuccess\"]) {\r\n                    let data = res[\"Data\"];\r\n                    let user = new BBUser(data[\"ID\"], data[\"Name\"]);\r\n                    cb.success(user);\r\n                } else {\r\n                    cb.fail(res[\"Info\"][\"Message\"]);\r\n                }\r\n            },\r\n            fail: (err) => {\r\n                cb.fail(err.errMsg);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n"]}