{"version":3,"sources":["assets\\Script\\Rock\\Rocker.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAoC,0BAAY;IAAhD;QAAA,qEAqCC;QAlCG,gBAAU,GAAY,IAAI,CAAC;QAG3B,eAAS,GAAW,GAAG,CAAC;;IA+B5B,CAAC;IA7BG,iCAAgB,GAAhB,UAAiB,KAAc;QAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;QACpB,IAAG,GAAG,GAAG,IAAI,CAAC,SAAS,EAAC;YACpB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;YACrC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;SACxC;QACD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAED,uBAAM,GAAN;QAAA,iBAkBC;QAjBG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,UAAC,CAAsB;YACrE,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;YAC5B,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,UAAC,CAAsB;YACpE,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;YAC5B,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,UAAC,CAAsB;YACnE,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,UAAC,CAAsB;YACtE,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,EAAC,IAAI,CAAC,CAAC;IACZ,CAAC;IAjCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACS;IAG3B;QADC,QAAQ;6CACe;IANP,MAAM;QAD1B,OAAO;OACa,MAAM,CAqC1B;IAAD,aAAC;CArCD,AAqCC,CArCmC,EAAE,CAAC,SAAS,GAqC/C;kBArCoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Rocker extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    rockerCore: cc.Node = null;\r\n\r\n    @property\r\n    maxRaduis: number = 160;\r\n\r\n    setRockerPostion(w_pos: cc.Vec2) {\r\n        var pos = this.node.convertToNodeSpaceAR(w_pos);\r\n        var len = pos.len();\r\n        if(len > this.maxRaduis){\r\n            pos.x = this.maxRaduis * pos.x / len;\r\n            pos.y = this.maxRaduis * pos.y / len;\r\n        }\r\n        this.rockerCore.setPosition(pos);\r\n    }\r\n\r\n    onLoad() {\r\n        this.rockerCore.on(cc.Node.EventType.TOUCH_START, (e: cc.Event.EventTouch) => {\r\n            let w_pos = e.getLocation();\r\n            this.setRockerPostion(w_pos);\r\n        }, this);\r\n\r\n        this.rockerCore.on(cc.Node.EventType.TOUCH_MOVE, (e: cc.Event.EventTouch) => {\r\n            let w_pos = e.getLocation();\r\n            this.setRockerPostion(w_pos);\r\n        }, this);\r\n\r\n        this.rockerCore.on(cc.Node.EventType.TOUCH_END, (e: cc.Event.EventTouch) => {\r\n            this.rockerCore.setPosition(cc.v2(0, 0));\r\n        }, this);\r\n\r\n        this.rockerCore.on(cc.Node.EventType.TOUCH_CANCEL, (e: cc.Event.EventTouch) => {\r\n            this.rockerCore.setPosition(cc.v2(0, 0));\r\n        },this);\r\n    }\r\n}\r\n"]}